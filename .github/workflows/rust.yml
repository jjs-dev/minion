name: Rust

on:
  push:
    branches:
      - master
      - staging
      - trying
  pull_request:

env:
  CARGO_TERM_COLOR: always
jobs:
  fmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          components: rustfmt
      - name: Check formatting
        run: |
          rm -rf .cargo
          cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly
          components: clippy
          override: true
      - name: Run clippy
        run: |
          cargo clippy --workspace -- -Dclippy::all -Dwarnings
  tests-linux-build:
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          # nightly is used for cargo --out-dir option.
          toolchain: nightly
          override: true
      - name: Install targets
        run: |
          rustup target add x86_64-unknown-linux-musl
      - name: Build tests (musl)
        run: |
          mkdir -p ./tests/x86_64-unknown-linux-musl
          cargo build -p minion-tests -Zunstable-options --out-dir=./tests/x86_64-unknown-linux-musl --target=x86_64-unknown-linux-musl
        timeout-minutes: 5
      - uses: actions/upload-artifact@v2
        with:
          path: ./tests
          name: tests-linux
          retention-days: 2
  tests-linux-run:
    strategy:
      matrix:
        os:
          - "ubuntu-20.04"
        rust-target:
          - "x86_64-unknown-linux-musl"
        cgroups:
          - "cgroup-v1"
          - "cgroup-v2"
    runs-on: ${{ matrix.os }}
    needs:
      - tests-linux-build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          path: ./tests
          name: tests-linux
      - name: Test
        run: |
          bash ci/linux.sh
        timeout-minutes: 10
        env:
          CI_TARGET: ${{ matrix.rust-target }}
          CI_CGROUPS: ${{ matrix.cgroups }}
          CI_OS: ${{ matrix.os }}
      - name: Collect logs
        if: always()
        run: |
          mkdir /tmp/logs
          cp ./strace* uml-ci/slirp* /tmp/logs
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          path: /tmp/logs
          name: tests-trace-${{ matrix.cgroups }}-${{ matrix.os }}

  nightly-checks:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly
          override: true
      - name: Run special lints
        run: |
          rm -rf .cargo
          cargo check --workspace
        env:
          RUSTFLAGS: -Wunused-crate-dependencies --cfg minion_nightly
